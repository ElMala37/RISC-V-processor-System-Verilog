#!/bin/bash

export PROJECTNAME="."


echo "the project location is : $PROJECTNAME"
echo "removing libs"
vdel -lib $PROJECTNAME/LIB/LIB_RTL -all
vdel -lib $PROJECTNAME/LIB/LIB_BENCH -all

echo "creating library "

vlib $PROJECTNAME/LIB/LIB_RTL
vmap LIB_RTL $PROJECTNAME/LIB/LIB_RTL
vlib $PROJECTNAME/LIB/LIB_BENCH
vmap LIB_BENCH $PROJECTNAME/LIB/LIB_BENCH

# compilation des fichiers sources
vlog -sv +acc -svinputport=net -work LIB_RTL $PROJECTNAME/SRC/RTL/ControlUnit.sv | grep Error
vlog -sv +acc -svinputport=net -work LIB_RTL $PROJECTNAME/SRC/RTL/register_file.sv | grep Error
vlog -sv +acc -svinputport=net -work LIB_RTL $PROJECTNAME/SRC/RTL/ALU.sv | grep Error
vlog -sv +acc -svinputport=net -work LIB_RTL $PROJECTNAME/SRC/RTL/mux.sv | grep Error
vlog -sv +acc -svinputport=net -work LIB_RTL $PROJECTNAME/SRC/RTL/imm_gen.sv | grep Error
vlog -sv +acc -svinputport=net -work LIB_RTL $PROJECTNAME/SRC/RTL/top_level.sv | grep Error

# Compilation des fichiers TB
vlog -sv +acc -svinputport=net -L LIB_RTL -work LIB_BENCH $PROJECTNAME/SRC/BENCH/top_level_tb.sv | grep Error

# lancement du simulateur
echo "compilation finished"
echo "start simulation..."

# ATTENTION un seul VSIM decommenté à la fois!
vsim -L LIB_RTL LIB_BENCH.top_level_tb -do top_level_wave.do